spring:
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope:
              - openid
              - email
              - profile
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          google:
            authorization-uri: https://accounts.google.com/o/oauth2/auth
            token-uri: https://oauth2.googleapis.com/token
            user-info-uri: https://www.googleapis.com/oauth2/v3/userinfo
            jwk-set-uri: https://www.googleapis.com/oauth2/v3/certs
            user-name-attribute: sub
  jpa:
    hibernate:
      ddl-auto: update
    showSql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
  datasource:
    url: jdbc:mysql://localhost:3306/${AUTH_SERVICE_DB}?createDatabaseIfNotExist=true
    username: ${AUTH_SERVICE_DB_USERNAME}
    password: ${AUTH_SERVICE_DB_PASSWORD}
    driverClassName: com.mysql.cj.jdbc.Driver
  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

auth:
  server:
    clientId: ${CLIENTID:gateway-client}
    secret: ${CLIENT_SECRET:secret}
    gatewayClientUrl: ${GATEWAY_CLIENT_URL:https://codejudge.trinhhoctuan.io.vn}
    authServerUrl: ${AUTH_SERVER_URL:http://localhost:9000}
    clientUrl: ${CLIENT_URL:http://localhost:3000}

server:
  port: 9000

eureka:
  instance:
    hostname: localhost
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include: health,info
  endpoint:
    health:
      show-details: always

logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    com.example.authserver: DEBUG