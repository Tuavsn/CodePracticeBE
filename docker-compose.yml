services:
  config-server:
    build: ./config-server
    # ports:
    #   - "8888:8888"
    environment:
      - SPRING_PROFILES_ACTIVE=native
    networks:
      - code-judge-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  eureka-server:
    build: ./eureka-server
    # ports:
    #   - "8761:8761"
    depends_on:
      config-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
    networks:
      - code-judge-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  auth-mysql:
    image: mysql:8.0
    container_name: auth-mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${AUTH_SERVICE_DB_PASSWORD}
      MYSQL_DATABASE: ${AUTH_SERVICE_DB}
    volumes:
      - auth-mysql-data:/var/lib/mysql
    networks:
      - code-judge-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  auth-service:
    build: ./auth-service
    # ports:
    #   - "9000:9000"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      auth-mysql:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - AUTH_SERVICE_DB=${AUTH_SERVICE_DB}
      - AUTH_SERVICE_DB_USERNAME=${AUTH_SERVICE_DB_USERNAME}
      - AUTH_SERVICE_DB_PASSWORD=${AUTH_SERVICE_DB_PASSWORD}
      - CLIENTID=${CLIENTID}
      - CLIENT_SECRET=${CLIENT_SECRET}
      - CLIENT_URL=${CLIENT_URL}
      - GATEWAY_CLIENT_URL=${GATEWAY_CLIENT_URL}
      - AUTH_SERVER_URL=${AUTH_SERVER_URL}
      # Google credential
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    networks:
      - code-judge-net

  user-mysql:
    image: mysql:8.0
    container_name: user-mysql
    ports:
      - "3308:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${USER_SERVICE_DB_PASSWORD}
      MYSQL_DATABASE: ${USER_SERVICE_DB}
    volumes:
      - user-mysql-data:/var/lib/mysql
    networks:
      - code-judge-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 30s
      timeout: 10s
      retries: 5

  user-service:
    build: ./user-service
    # ports:
    #   - "9001:9001"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
      user-mysql:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - USER_SERVICE_DB=${USER_SERVICE_DB}
      - USER_SERVICE_DB_USERNAME=${USER_SERVICE_DB_USERNAME}
      - USER_SERVICE_DB_PASSWORD=${USER_SERVICE_DB_PASSWORD}
    networks:
      - code-judge-net

  forum-service:
    build: ./forum-service
    # ports:
    #   - "9002:9002"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - FORUM_SERVICE_DB_URL=${FORUM_SERVICE_DB_URL}
      - FORUM_SERVICE_DB=${FORUM_SERVICE_DB}
    networks:
      - code-judge-net

  problem-service:
    build: ./problem-service
    # ports:
    #   - "9003:9003"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - PROBLEM_SERVICE_DB_URL=${PROBLEM_SERVICE_DB_URL}
      - PROBLEM_SERVICE_DB=${PROBLEM_SERVICE_DB}
    networks:
      - code-judge-net

  submission-service:
    build: ./submission-service
    # ports:
    #   - "9004:9004"
    depends_on:
      config-server:
        condition: service_healthy
      eureka-server:
        condition: service_healthy
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - SUBMISSION_SERVICE_DB_URL=${SUBMISSION_SERVICE_DB_URL}
      - SUBMISSION_SERVICE_DB=${SUBMISSION_SERVICE_DB}
      - JUDGE0_URL=${JUDGE0_URL}
      - JUDGE0_AUTH_TOKEN=${JUDGE0_AUTH_TOKEN}
      # Judge0 configuration
      - MAX_CPU_TIME_LIMIT=15
      - MAX_CPU_EXTRA_TIME=2
      - MAX_WALL_TIME_LIMIT=20
      - MAX_MEMORY_LIMIT=256000
      - MAX_STACK_LIMIT=128000
      - MAX_MAX_PROCESSES_AND_OR_THREADS=120
      - ALLOW_ENABLE_PER_PROCESS_AND_THREAD_TIME_LIMIT=true
      - ALLOW_ENABLE_PER_PROCESS_AND_THREAD_MEMORY_LIMIT=true
      - MAX_MAX_FILE_SIZE=4096
      - MAX_NUMBER_OF_RUNS=20
    networks:
      - code-judge-net

  api-gateway:
    build: ./api-gateway
    ports:
      - "8080:8080"
    depends_on:
      auth-service:
        condition: service_started
      user-service:
        condition: service_started
      forum-service:
        condition: service_started
      problem-service:
        condition: service_started
      submission-service:
        condition: service_started
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_CONFIG_IMPORT=optional:configserver:http://config-server:8888
      - API_PREFIX=${API_PREFIX}
    networks:
      - code-judge-net

networks:
  code-judge-net:
    driver: bridge

volumes:
  auth-mysql-data:
  user-mysql-data: